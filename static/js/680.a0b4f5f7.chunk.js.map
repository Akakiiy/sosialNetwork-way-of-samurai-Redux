{"version":3,"file":"static/js/680.a0b4f5f7.chunk.js","mappings":"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","sources":["webpack://way-of-samurai/./src/components/Users/Users.module.css?b9d0","webpack://way-of-samurai/./src/components/Users/User/User.module.css?cfea","components/Users/User/User.jsx","components/Users/UsersPagesPaginator.jsx","components/Users/Users.jsx","components/Redux/selectors/users-selectors.js","components/Users/UserContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"usersWrapper\":\"Users_usersWrapper__Buzd3\",\"user\":\"Users_user__ureKU\",\"pages\":\"Users_pages__R6hxo\",\"activePage\":\"Users_activePage__U254P\",\"page\":\"Users_page__dwNkK\",\"prevBtn\":\"Users_prevBtn__gTzYY\",\"nextBtn\":\"Users_nextBtn__67VZm\"};","// extracted by mini-css-extract-plugin\nexport default {\"userImg\":\"User_userImg__EghMb\",\"buttonFollow\":\"User_buttonFollow__FmeX9\",\"buttonUnfollow\":\"User_buttonUnfollow__w4rf4\",\"userInfo\":\"User_userInfo__DsfXp\",\"userName\":\"User_userName__mS-Mh\",\"userStatus\":\"User_userStatus__qPnGj\",\"userLocation\":\"User_userLocation__+nyId\"};","import s from './User.module.css';\nimport profileImgPlug from \"../../../assets/img/ryan-gosling.jpeg\";\nimport {NavLink} from \"react-router-dom\";\n\n\nconst User = (props) => {\n    return (\n        <>\n            <div>\n                <div>\n                    <img className={s.userImg}\n                         src={props.photos.small !== null ? props.photos.small : profileImgPlug}\n                         alt={props.name}/>\n                </div>\n                {props.followed ?\n                    <button className={s.buttonUnfollow}\n                            disabled={props.areFollowing.some(idBtn => idBtn === props.id)}\n                            onClick={() => props.unfollow(props.id)}>unfollow</button>\n                    : <button className={s.buttonFollow}\n                              disabled={props.areFollowing.some(idBtn => idBtn === props.id)}\n                              onClick={() => props.follow(props.id)}>follow</button>}\n            </div>\n            <div className={s.userInfo}>\n                <NavLink className={s.userName} to={`/profile/${props.id}`}>\n                    {props.name}\n                </NavLink>\n                <div className={s.userStatus}>\n                    {props.status}\n                </div>\n                <div className={s.userLocation}>\n                    <div>{'props.location.country'}</div>\n                    <div>{'props.location.city'}</div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default User;","import s from \"./Users.module.css\";\nimport {useState} from \"react\";\n\nconst UsersPagesPaginator = ({currentPage, changePage, totalUsersCount, uploadingUsersCount, countPagesInABlock}) => {\n    const [currentBlockOfPages, setCurrentBlockOfPages] = useState(1);\n\n    let totalPages = Math.ceil(totalUsersCount / uploadingUsersCount),\n        pagesArr = [];\n\n    for (let i = 1; i <= totalPages; i++) {\n        pagesArr.push(i)\n    }\n\n    let minPageNum = (currentBlockOfPages - 1) * countPagesInABlock + 1,\n        maxPageNum = currentBlockOfPages * countPagesInABlock,\n        filteredPages = pagesArr.slice(minPageNum - 1, maxPageNum);\n\n    const prevPage = () => {\n        if (currentBlockOfPages > 1) {\n            setCurrentBlockOfPages(currentBlockOfPages - 1)\n        }\n    };\n    const nextPage = () => {\n        if ((totalPages / countPagesInABlock) > currentBlockOfPages) {\n            setCurrentBlockOfPages(currentBlockOfPages + 1)\n        }\n    };\n    return (\n        <div className={s.pages}>\n            <button className={s.prevBtn} onClick={prevPage}>Prev</button>\n            {\n                filteredPages.map(page => {\n                    return <button className={currentPage === +page ? s.activePage : s.page}\n                                   key={page}\n                                   onClick={() => changePage(page)}>{page}</button>\n                })\n            }\n            <button className={s.nextBtn} onClick={nextPage}>Next</button>\n        </div>\n    );\n}\n\nexport default UsersPagesPaginator;","import s from \"./Users.module.css\";\nimport User from \"./User/User\";\nimport UsersPagesPaginator from \"./UsersPagesPaginator\";\n\n\nconst Users = (props) => {\n\n    return (\n        <div className={s.usersWrapper}>\n            <UsersPagesPaginator uploadingUsersCount={props.uploadingUsersCount}\n                                 totalUsersCount={props.totalUsersCount}\n                                 currentPage={props.currentPage}\n                                 changePage={props.changePage}\n                                 countPagesInABlock={10} />\n            {\n                props.users.map(user => {\n                    return (\n                        <div key={user.id} className={s.user}>\n                            <User id={user.id}\n                                  photos={user.photos}\n                                  name={user.name}\n                                  followed={user.followed}\n                                  status={user.status}\n                                  areFollowing={props.areFollowing}\n                                  unfollow={props.unfollow}\n                                  follow={props.follow}/>\n                        </div>\n                        )\n                })\n            }\n        </div>\n    );\n}\n\nexport default Users;","import {createSelector} from \"reselect\";\n\nconst getUsersSelector = (state) => {\n    return state.usersPage.users;\n};\nexport const getUsers = createSelector(getUsersSelector,\n    (users) => {\n    return users.filter(u => true); //это просто заглушка для набивания руки или для дальнейших более сложных процессов (все таки это обучение)\n});\n\nconst getTotalUsersCountSelector = (state) => {\n    return state.usersPage.totalUsersCount;\n};\nexport const getTotalUsersCount = createSelector(getTotalUsersCountSelector,\n    (totalUsersCount) => {\n    return totalUsersCount;\n});\n\nconst getCurrentPageSelector = (state) => {\n    return state.usersPage.currentPage;\n};\nexport const getCurrentPage = createSelector(getCurrentPageSelector,\n    (currentPage) => {\n    return currentPage;\n});\n\nconst getUploadingUsersCountSelector = (state) => {\n    return state.usersPage.uploadingUsersCount;\n};\nexport const getUploadingUsersCount = createSelector(getUploadingUsersCountSelector,\n    (uploadingUsersCount) => {\n    return uploadingUsersCount;\n});\n\nconst getAreFollowingSelector = (state) => {\n    return state.usersPage.areFollowing;\n};\nexport const getAreFollowing = createSelector(getAreFollowingSelector,\n    (areFollowing) => {\n    return areFollowing;\n});\n\nconst getIsLoading = (state) => {\n    return state.usersPage.isLoading;\n}\nexport const getIsLoadingSelector = createSelector(getIsLoading,\n    (isLoading) => {\n    return isLoading;\n});\n","import {connect} from \"react-redux\";\nimport {unfollow, follow, uploadUsers} from \"../Redux/users-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {useEffect} from \"react\";\nimport {compose} from \"redux\";\nimport {\n    getAreFollowing,\n    getCurrentPage, getIsLoadingSelector,\n    getTotalUsersCount,\n    getUploadingUsersCount,\n    getUsers\n} from \"../Redux/selectors/users-selectors\";\n\nconst UsersContainer = ({currentPage, uploadingUsersCount, totalUsersCount,\n                            isLoading, uploadUsers, users,\n                            areFollowing,unfollow, follow}) => {\n\n    useEffect(() => {\n        uploadUsers(currentPage, uploadingUsersCount);\n    }, [currentPage]);\n\n    const changePage = (page) => {\n        uploadUsers(page, uploadingUsersCount);\n    }\n\n    return (\n        <>\n            {\n                isLoading ?\n                    <Preloader/> :\n                    <Users changePage={changePage}\n                           currentPage={currentPage}\n                           totalUsersCount={totalUsersCount}\n                           uploadingUsersCount={uploadingUsersCount}\n                           unfollow={unfollow}\n                           follow={follow}\n                           users={users}\n                           areFollowing={areFollowing}/>\n            }\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        uploadingUsersCount: getUploadingUsersCount(state),\n        areFollowing: getAreFollowing(state),\n        isLoading: getIsLoadingSelector(state),\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps, {uploadUsers, follow, unfollow}),\n)(UsersContainer);"],"names":["props","_jsxs","_Fragment","children","_jsx","className","s","src","photos","small","profileImgPlug","alt","name","followed","disabled","areFollowing","some","idBtn","id","onClick","unfollow","follow","NavLink","to","concat","status","_ref","currentPage","changePage","totalUsersCount","uploadingUsersCount","countPagesInABlock","_useState","useState","_useState2","_slicedToArray","currentBlockOfPages","setCurrentBlockOfPages","totalPages","Math","ceil","pagesArr","i","push","minPageNum","maxPageNum","filteredPages","slice","map","page","UsersPagesPaginator","users","user","User","getUsers","createSelector","state","usersPage","filter","u","getTotalUsersCount","getCurrentPage","getUploadingUsersCount","getAreFollowing","getIsLoadingSelector","isLoading","compose","connect","uploadUsers","useEffect","Preloader","Users"],"sourceRoot":""}