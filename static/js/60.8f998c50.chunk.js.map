{"version":3,"file":"static/js/60.8f998c50.chunk.js","mappings":"+KACA,EAAwB,qBAAxB,EAAiE,iC,uCC2CjE,EAxCkB,SAACA,GAEf,OACIC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACHC,cAAe,CAAEC,MAAO,GAAIC,SAAU,GAAIC,YAAY,GACtDC,iBAAkBC,EAAAA,KAAaC,MAAM,CACjCL,MAAOI,EAAAA,KAAaJ,MAAM,iBAAiBM,SAAS,YACpDL,SAAUG,EAAAA,KAAaE,SAAS,cAEpCC,SAAU,SAAAC,GAAWZ,EAAMa,MAAMD,EAAO,EACxCE,gBAAgB,EAAKC,UAErBC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAF,SAAA,EACDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACId,EAAAA,EAAAA,KAACiB,EAAAA,GAAK,CAACC,KAAK,OACLC,KAAK,QACLC,YAAa,WACpBpB,EAAAA,EAAAA,KAACqB,EAAAA,GAAY,CAACF,KAAK,QACLG,UAAU,YAE5BP,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACId,EAAAA,EAAAA,KAACiB,EAAAA,GAAK,CAACC,KAAK,WACLC,KAAK,WACLC,YAAa,cACpBpB,EAAAA,EAAAA,KAACqB,EAAAA,GAAY,CAACF,KAAK,WACLG,UAAU,YAE5BP,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACId,EAAAA,EAAAA,KAACiB,EAAAA,GAAK,CAACC,KAAK,WACLC,KAAK,gBACZnB,EAAAA,EAAAA,KAAA,QAAAc,SAAM,wFAEVd,EAAAA,EAAAA,KAAA,OAAAc,UACId,EAAAA,EAAAA,KAAA,UAAQkB,KAAK,SAAQJ,SAAC,iBAK1C,E,oBCfA,EAtBc,SAACf,GAEX,OAAIA,EAAMwB,UACCvB,EAAAA,EAAAA,KAACwB,EAAAA,GAAQ,CAACC,GAAI,cAIrBV,EAAAA,EAAAA,MAAA,OAAKW,UAAWC,EAAQb,SAAA,EACpBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACId,EAAAA,EAAAA,KAAA,MAAAc,SAAI,WACJd,EAAAA,EAAAA,KAAC4B,EAAS,CAACL,SAAUxB,EAAMwB,SAChBX,MAAOb,EAAMa,SACxBZ,EAAAA,EAAAA,KAAA,OAAK0B,UAAWC,EACXE,MAAO9B,EAAM+B,mBAAqB,CAACC,WAAY,UAAWC,QAAS,KAAKlB,SAAEf,EAAM+B,uBAGrF/B,EAAMkC,WAAYjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,IAAM,OAIlD,E,oBCPA,GAAeC,EAAAA,EAAAA,KARY,SAACC,GACxB,MAAO,CACHb,UAAUc,EAAAA,EAAAA,IAAoBD,GAC9BN,mBAAmBQ,EAAAA,EAAAA,IAA+BF,GAClDH,WAAWM,EAAAA,EAAAA,IAAqBH,GAExC,GAE2C,CAACxB,MAAAA,EAAAA,IAA5C,CAAoD4B,E","sources":["webpack://way-of-samurai/./src/components/Login/Login.module.css?3530","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login\":\"Login_login__4rE5+\",\"loginErrorMessage\":\"Login_loginErrorMessage__BcjIq\"};","import {ErrorMessage, Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\n\nconst LoginForm = (props) => {\n\n    return (\n        <Formik\n            initialValues={{ email: '', password: '', rememberMe: false}}\n            validationSchema={Yup.object().shape({\n                email: Yup.string().email('Invalid email').required('Required'),\n                password: Yup.string().required('Required'),\n            })}\n            onSubmit={values => {props.login(values)}}\n            validateOnBlur={true}\n        >\n            <Form>\n                <div>\n                    <Field type=\"text\"\n                           name=\"email\"\n                           placeholder={'Login'} />\n                    <ErrorMessage name=\"email\"\n                                  component=\"div\" />\n                </div>\n                <div>\n                    <Field type=\"password\"\n                           name=\"password\"\n                           placeholder={'Password'} />\n                    <ErrorMessage name=\"password\"\n                                  component=\"div\" />\n                </div>\n                <div>\n                    <Field type=\"checkbox\"\n                           name=\"rememberMe\"/>\n                    <span>запомнить меня</span>\n                </div>\n                <div>\n                    <button type=\"submit\">Log IN</button>\n                </div>\n            </Form>\n        </Formik>\n    );\n}\n\nexport default LoginForm;","import s from './Login.module.css';\nimport LoginForm from \"./LoginForm/LoginForm\";\nimport {Redirect} from \"react-router-dom\";\nimport Preloader from \"../common/Preloader/Preloader\";\n\nconst Login = (props) => {\n\n    if (props.isLogged) {\n        return <Redirect to={'/profile'} />\n    }\n\n    return (\n        <div className={s.login}>\n            <div>\n                <h2>LOGIN</h2>\n                <LoginForm isLogged={props.isLogged}\n                           login={props.login}/>\n                <div className={s.loginErrorMessage}\n                     style={props.loginErrorMessage && {visibility: 'visible', opacity: '1'}}>{props.loginErrorMessage}</div>\n            </div>\n            {\n                props.isLoading ? <Preloader /> : null\n            }\n        </div>\n    );\n}\n\nexport default Login;","import {connect} from \"react-redux\";\nimport Login from \"./Login\";\nimport {login} from \"../Redux/auth-reducer\";\nimport {\n    getIsLoadingSelector,\n    getIsLoggedSelector,\n    getLoadingErrorMessageSelector\n} from \"../Redux/selectors/auth-selectors\";\n\n\nconst mapDispatchToProps = (state) => {\n    return {\n        isLogged: getIsLoggedSelector(state),\n        loginErrorMessage: getLoadingErrorMessageSelector(state),\n        isLoading: getIsLoadingSelector(state),\n    }\n}\n\nexport default connect(mapDispatchToProps, {login})(Login);"],"names":["props","_jsx","Formik","initialValues","email","password","rememberMe","validationSchema","Yup","shape","required","onSubmit","values","login","validateOnBlur","children","_jsxs","Form","Field","type","name","placeholder","ErrorMessage","component","isLogged","Redirect","to","className","s","LoginForm","style","loginErrorMessage","visibility","opacity","isLoading","Preloader","connect","state","getIsLoggedSelector","getLoadingErrorMessageSelector","getIsLoadingSelector","Login"],"sourceRoot":""}